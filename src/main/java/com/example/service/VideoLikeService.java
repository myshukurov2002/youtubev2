package com.example.service;import com.example.dto.ApiResponse;import com.example.dto.VideoLikeHistoryDTO;import com.example.entity.VideoEntity;import com.example.entity.VideoLikeHistoryEntity;import com.example.enums.Language;import com.example.enums.Like;import com.example.repository.VideoLikeRepository;import com.example.repository.VideoRepository;import com.example.util.SpringSecurityUtil;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.Optional;@Servicepublic class VideoLikeService {    @Autowired    private VideoLikeRepository videoLikeRepository;    @Autowired    private VideoRepository videoRepository;    @Autowired    private ResourceBundleService resourceBundleService;    private VideoLikeHistoryDTO TO_DTO(VideoLikeHistoryEntity entity) {        VideoLikeHistoryDTO dto = new VideoLikeHistoryDTO();        dto.setLike(entity.getLike());        dto.setVideoId(entity.getVideoId());        dto.setProfileId(entity.getProfileId());        return dto;    }    public ApiResponse like(String videoId, Language lang) {        Integer profileId = SpringSecurityUtil.getCurrentProfileId();        Optional<VideoLikeHistoryEntity> optionalHistory =                videoLikeRepository.findByVideoIdAndProfileId(videoId, profileId);        if (optionalHistory.isPresent()) {            VideoLikeHistoryEntity history = optionalHistory.get();            if (history.getLike() == null) {                history.setLike(Like.LIKE);            } else if (history.getLike().equals(Like.DISLIKE)) {                history.setLike(Like.LIKE);            } else {                history.setLike(null);            }            VideoLikeHistoryEntity updated =                    videoLikeRepository.save(history);            return new ApiResponse(true, TO_DTO(updated));        } else {            Optional<VideoEntity> optionalVideo =                    videoRepository.findById(videoId);            if (optionalVideo.isPresent()) {                VideoLikeHistoryEntity entity = new VideoLikeHistoryEntity();                entity.setProfileId(profileId);                entity.setVideoId(videoId);                entity.setLike(Like.LIKE);                VideoLikeHistoryEntity saved =                        videoLikeRepository.save(entity);                return new ApiResponse(true, TO_DTO(entity));            } else {                return new ApiResponse(false, resourceBundleService.getMessage("item.not.found", lang));            }        }    }    public ApiResponse dislike(String videoId, Language lang) {        Integer profileId = SpringSecurityUtil.getCurrentProfileId();        Optional<VideoLikeHistoryEntity> optionalHistory =                videoLikeRepository.findByVideoIdAndProfileId(videoId, profileId);        if (optionalHistory.isPresent()) {            VideoLikeHistoryEntity history = optionalHistory.get();            if (history.getLike() == null) {                history.setLike(Like.DISLIKE);            } else if (history.getLike().equals(Like.LIKE)) {                history.setLike(Like.DISLIKE);            } else {                history.setLike(null);            }            VideoLikeHistoryEntity updated =                    videoLikeRepository.save(history);            return new ApiResponse(true, TO_DTO(updated));        } else {            Optional<VideoEntity> optionalVideo =                    videoRepository.findById(videoId);            if (optionalVideo.isPresent()) {                VideoLikeHistoryEntity entity = new VideoLikeHistoryEntity();                entity.setProfileId(profileId);                entity.setVideoId(videoId);                entity.setLike(Like.DISLIKE);                VideoLikeHistoryEntity saved =                        videoLikeRepository.save(entity);                return new ApiResponse(true, TO_DTO(entity));            } else {                return new ApiResponse(false, resourceBundleService.getMessage("item.not.found", lang));            }        }    }}